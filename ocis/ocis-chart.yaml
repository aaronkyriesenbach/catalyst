---
# Source: ocis/templates/appregistry/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: appregistry-config
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  app-registry.yaml: |
    ---
---
# Source: ocis/templates/authservice/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: auth-service
  labels:
data:
  service-account-id: "73e9d04d-d891-4ced-80bf-02ec969b29aa"
---
# Source: ocis/templates/frontend/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sharing-banned-passwords-frontend
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  sharing-banned-passwords.txt: |-
---
# Source: ocis/templates/graph/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: graph
  labels:
data:
  application-id: "e4b5f922-c282-4d31-9202-8551ac601161"
---
# Source: ocis/templates/proxy/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: proxy-config
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  proxy.yaml: |
    ---
    policy_selector:
      static:
        policy: ocis

  csp.yaml: |
    ---
    directives:
      child-src:
        - '''self'''
      connect-src:
        - '''self'''
        - "https://auth.lab53.net/"
      default-src:
        - '''none'''
      font-src:
        - '''self'''
      frame-ancestors:
        - '''self'''
      frame-src:
        - '''self'''
        - 'blob:'
      img-src:
        - '''self'''
        - 'data:'
        - 'blob:'
      manifest-src:
        - '''self'''
      media-src:
        - '''self'''
      object-src:
        - '''self'''
        - 'blob:'
      script-src:
        - '''self'''
        - '''unsafe-inline'''
      style-src:
        - '''self'''
        - '''unsafe-inline'''
---
# Source: ocis/templates/sharing/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: sharing-banned-passwords-sharing
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  sharing-banned-passwords.txt: |-
---
# Source: ocis/templates/storageusers/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: storage-users
  labels:
data:
  storage-uuid: "67379d9b-d1c0-4333-a68c-5295051b9c4d"
---
# Source: ocis/templates/web/config.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: web-config
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
data:
  web.yaml: |
    ---
    web:
      config:
---
# Source: ocis/templates/activitylog/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: activitylog
  namespace: ocis
  labels:
    app: activitylog
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: activitylog
  ports:
    - name: http
      port: 9195
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9197
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/appregistry/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: appregistry
  namespace: ocis
  labels:
    app: appregistry
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: appregistry
  ports:
    - name: grpc
      port: 9242
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9243
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/audit/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: audit
  namespace: ocis
  labels:
    app: audit
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: audit
  ports:
    - name: metrics-debug
      port: 9229
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/authmachine/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: authmachine
  namespace: ocis
  labels:
    app: authmachine
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: authmachine
  ports:
    - name: grpc
      port: 9166
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9167
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/authservice/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: authservice
  namespace: ocis
  labels:
    app: authservice
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: authservice
  ports:
    - name: grpc
      port: 9616
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9617
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/clientlog/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: clientlog
  namespace: ocis
  labels:
    app: clientlog
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: clientlog
  ports:
    - name: metrics-debug
      port: 9260
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/eventhistory/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: eventhistory
  namespace: ocis
  labels:
    app: eventhistory
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: eventhistory
  ports:
    - name: grpc
      port: 8080
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9270
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/frontend/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: ocis
  labels:
    app: frontend
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: frontend
  ports:
    - name: http
      port: 9140
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9141
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/gateway/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: gateway
  namespace: ocis
  labels:
    app: gateway
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: gateway
  ports:
    - name: grpc
      port: 9142
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9143
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/graph/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: graph
  namespace: ocis
  labels:
    app: graph
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: graph
  ports:
    - name: http
      port: 9120
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9124
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/groups/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: groups
  namespace: ocis
  labels:
    app: groups
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: groups
  ports:
    - name: grpc
      port: 9160
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9161
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/nats/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: nats
  namespace: ocis
  labels:
    app: nats
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: nats
  ports:
    - name: nats
      port: 9233
      protocol: TCP
      appProtocol: "tcp"
    - name: metrics-debug
      port: 9234
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/ocdav/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ocdav
  namespace: ocis
  labels:
    app: ocdav
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: ocdav
  ports:
    - name: http
      port: 8080
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9163
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/ocs/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: ocs
  namespace: ocis
  labels:
    app: ocs
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: ocs
  ports:
    - name: http
      port: 9110
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9114
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/postprocessing/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: postprocessing
  namespace: ocis
  labels:
    app: postprocessing
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: postprocessing
  ports:
    - name: metrics-debug
      port: 9255
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/proxy/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: proxy
  namespace: ocis
  labels:
    app: proxy
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: proxy
  ports:
    - name: http
      protocol: TCP
      appProtocol: "http"
      port: 9200
    - name: metrics-debug
      port: 9205
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/search/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: search
  namespace: ocis
  labels:
    app: search
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: search
  ports:
    - name: grpc
      port: 9220
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9224
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/settings/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: settings
  namespace: ocis
  labels:
    app: settings
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: settings
  ports:
    - name: grpc
      port: 9191
      protocol: TCP
      appProtocol: "grpc"
    - name: http
      port: 9190
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9194
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/sharing/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sharing
  namespace: ocis
  labels:
    app: sharing
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: sharing
  ports:
    - name: grpc
      port: 9150
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9151
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/sse/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: sse
  namespace: ocis
  labels:
    app: sse
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: sse
  ports:
    - name: http
      port: 9939
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9135
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/storagepubliclink/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: storagepubliclink
  namespace: ocis
  labels:
    app: storagepubliclink
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: storagepubliclink
  ports:
    - name: grpc
      port: 9178
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9179
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/storageshares/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: storageshares
  namespace: ocis
  labels:
    app: storageshares
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: storageshares
  ports:
    - name: grpc
      port: 9154
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9156
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/storagesystem/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: storagesystem
  namespace: ocis
  labels:
    app: storagesystem
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: storagesystem
  ports:
    - name: grpc
      port: 9215
      protocol: TCP
      appProtocol: "grpc"
    - name: http
      port: 9216
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9217
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/storageusers/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: storageusers
  namespace: ocis
  labels:
    app: storageusers
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: storageusers
  ports:
    - name: grpc
      port: 9157
      protocol: TCP
      appProtocol: "grpc"
    - name: http
      port: 9158
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9159
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/thumbnails/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: thumbnails
  namespace: ocis
  labels:
    app: thumbnails
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: thumbnails
  ports:
    - name: grpc
      port: 9185
      protocol: TCP
      appProtocol: "grpc"
    - name: http
      port: 9186
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9189
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/userlog/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: userlog
  namespace: ocis
  labels:
    app: userlog
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: userlog
  ports:
    - name: http
      port: 8080
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9210
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/users/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: users
  namespace: ocis
  labels:
    app: users
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: users
  ports:
    - name: grpc
      port: 9144
      protocol: TCP
      appProtocol: "grpc"
    - name: metrics-debug
      port: 9145
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/web/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: web
  namespace: ocis
  labels:
    app: web
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: web
  ports:
    - name: http
      port: 9100
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9104
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/webdav/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: webdav
  namespace: ocis
  labels:
    app: webdav
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: webdav
  ports:
    - name: http
      port: 9115
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 9119
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/webfinger/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: webfinger
  namespace: ocis
  labels:
    app: webfinger
    ocis-metrics: enabled
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    app: webfinger
  ports:
    - name: http
      port: 8080
      protocol: TCP
      appProtocol: "http"
    - name: metrics-debug
      port: 8081
      protocol: TCP
      appProtocol: "http"
---
# Source: ocis/templates/activitylog/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: activitylog
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: activitylog
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: activitylog
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: activitylog
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["activitylog", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            - name: OCIS_PERSISTENT_STORE
              value: "nats-js-kv"
            - name: OCIS_PERSISTENT_STORE_NODES
              value: "nats:9233"

            - name: ACTIVITYLOG_LOG_COLOR
              value: "true"
            - name: ACTIVITYLOG_LOG_LEVEL
              value: "debug"
            - name: ACTIVITYLOG_LOG_PRETTY
              value: "true"

            - name: ACTIVITYLOG_TRACING_ENABLED
              value: "false"
            - name: ACTIVITYLOG_TRACING_TYPE
              value: "jaeger"
            - name: ACTIVITYLOG_TRACING_ENDPOINT
              value: 
            - name: ACTIVITYLOG_TRACING_COLLECTOR
              value: 

            - name: ACTIVITYLOG_DEBUG_PPROF
              value: "false"

            - name: ACTIVITYLOG_HTTP_ADDR
              value: 0.0.0.0:9195
            - name: ACTIVITYLOG_DEBUG_ADDR
              value: 0.0.0.0:9197

            - name: ACTIVITYLOG_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: ACTIVITYLOG_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: ACTIVITYLOG_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9195
            - name: metrics-debug
              containerPort: 9197

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/appregistry/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: appregistry
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: appregistry
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/48
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: appregistry
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: e716c0a9631a4f30ddf261f725903b44055f6748a304c925b84a2dcd0e795c44
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: appregistry
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["app-registry", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: APP_REGISTRY_LOG_COLOR
              value: "true"
            - name: APP_REGISTRY_LOG_LEVEL
              value: "debug"
            - name: APP_REGISTRY_LOG_PRETTY
              value: "true"

            - name: APP_REGISTRY_TRACING_ENABLED
              value: "false"
            - name: APP_REGISTRY_TRACING_TYPE
              value: "jaeger"
            - name: APP_REGISTRY_TRACING_ENDPOINT
              value: 
            - name: APP_REGISTRY_TRACING_COLLECTOR
              value: 

            - name: APP_REGISTRY_DEBUG_PPROF
              value: "false"

            - name: APP_REGISTRY_GRPC_ADDR
              value: 0.0.0.0:9242
            - name: APP_REGISTRY_DEBUG_ADDR
              value: 0.0.0.0:9243

            - name: APP_REGISTRY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9242
            - name: metrics-debug
              containerPort: 9243

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: configs
              mountPath: /etc/ocis
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: configs
          configMap:
            name: appregistry-config
---
# Source: ocis/templates/audit/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: audit
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: audit
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: audit
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: audit
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["audit", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: AUDIT_LOG_COLOR
              value: "true"
            - name: AUDIT_LOG_LEVEL
              value: "debug"
            - name: AUDIT_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6172
            # - name: AUDIT_TRACING_ENABLED
            #   value: "false"
            # - name: AUDIT_TRACING_TYPE
            #   value: "jaeger"
            # - name: AUDIT_TRACING_ENDPOINT
            #   value: 
            # - name: AUDIT_TRACING_COLLECTOR
            #   value: 

            - name: AUDIT_DEBUG_PPROF
              value: "false"
            - name: AUDIT_DEBUG_ADDR
              value: 0.0.0.0:9229

            - name: AUDIT_LOG_TO_CONSOLE
              value: "true"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: metrics-debug
              containerPort: 9229

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/authmachine/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authmachine
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: authmachine
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authmachine
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: authmachine
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["auth-machine", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: AUTH_MACHINE_LOG_COLOR
              value: "true"
            - name: AUTH_MACHINE_LOG_LEVEL
              value: "debug"
            - name: AUTH_MACHINE_LOG_PRETTY
              value: "true"

            - name: AUTH_MACHINE_TRACING_ENABLED
              value: "false"
            - name: AUTH_MACHINE_TRACING_TYPE
              value: "jaeger"
            - name: AUTH_MACHINE_TRACING_ENDPOINT
              value: 
            - name: AUTH_MACHINE_TRACING_COLLECTOR
              value: 

            - name: AUTH_MACHINE_DEBUG_PPROF
              value: "false"

            - name: AUTH_MACHINE_GRPC_ADDR
              value: 0.0.0.0:9166
            - name: AUTH_MACHINE_DEBUG_ADDR
              value: 0.0.0.0:9167

            - name: AUTH_MACHINE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: AUTH_MACHINE_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9166
            - name: metrics-debug
              containerPort: 9167

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ocis/templates/authservice/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: authservice
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: authservice
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: authservice
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: authservice
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["auth-service", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: AUTH_SERVICE_LOG_COLOR
              value: "true"
            - name: AUTH_SERVICE_LOG_LEVEL
              value: "debug"
            - name: AUTH_SERVICE_LOG_PRETTY
              value: "true"

            - name: AUTH_SERVICE_TRACING_ENABLED
              value: "false"
            - name: AUTH_SERVICE_TRACING_TYPE
              value: "jaeger"
            - name: AUTH_SERVICE_TRACING_ENDPOINT
              value: 
            - name: AUTH_SERVICE_TRACING_COLLECTOR
              value: 

            - name: AUTH_SERVICE_DEBUG_PPROF
              value: "false"

            - name: AUTH_SERVICE_GRPC_ADDR
              value: 0.0.0.0:9616
            - name: AUTH_SERVICE_DEBUG_ADDR
              value: 0.0.0.0:9617

            - name: AUTH_SERVICE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: AUTH_SERVICE_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: AUTH_SERVICE_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9616
            - name: metrics-debug
              containerPort: 9617

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ocis/templates/clientlog/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: clientlog
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: clientlog
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: clientlog
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: clientlog
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["clientlog", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: CLIENTLOG_LOG_COLOR
              value: "true"
            - name: CLIENTLOG_LOG_LEVEL
              value: "debug"
            - name: CLIENTLOG_LOG_PRETTY
              value: "true"

            - name: CLIENTLOG_TRACING_ENABLED
              value: "false"
            - name: CLIENTLOG_TRACING_TYPE
              value: "jaeger"
            - name: CLIENTLOG_TRACING_ENDPOINT
              value: 
            - name: CLIENTLOG_TRACING_COLLECTOR
              value: 

            - name: CLIENTLOG_DEBUG_PPROF
              value: "false"

            - name: CLIENTLOG_DEBUG_ADDR
              value: 0.0.0.0:9260

            - name: CLIENTLOG_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: CLIENTLOG_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: CLIENTLOG_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: metrics-debug
              containerPort: 9260

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/eventhistory/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: eventhistory
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: eventhistory
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: eventhistory
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: eventhistory
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["eventhistory", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_PERSISTENT_STORE
              value: "nats-js-kv"
            - name: OCIS_PERSISTENT_STORE_NODES
              value: "nats:9233"

            - name: EVENTHISTORY_LOG_COLOR
              value: "true"
            - name: EVENTHISTORY_LOG_LEVEL
              value: "debug"
            - name: EVENTHISTORY_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6173
            # - name: EVENTHISTORY_TRACING_ENABLED
            #   value: "false"
            # - name: EVENTHISTORY_TRACING_TYPE
            #   value: "jaeger"
            # - name: EVENTHISTORY_TRACING_ENDPOINT
            #   value: 
            # - name: EVENTHISTORY_TRACING_COLLECTOR
            #   value: 

            - name: EVENTHISTORY_DEBUG_PPROF
              value: "false"

            - name: EVENTHISTORY_GRPC_ADDR
              value: 0.0.0.0:8080

            - name: EVENTHISTORY_DEBUG_ADDR
              value: 0.0.0.0:9270
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9270

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/frontend/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: frontend
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: frontend
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 6031a79e4f7f533ba47e6bf314d8e954e9f35445bdef60a6efd79a6c170e91bb
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: frontend
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["frontend", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: FRONTEND_LOG_COLOR
              value: "true"
            - name: FRONTEND_LOG_LEVEL
              value: "debug"
            - name: FRONTEND_LOG_PRETTY
              value: "true"

            - name: FRONTEND_TRACING_ENABLED
              value: "false"
            - name: FRONTEND_TRACING_TYPE
              value: "jaeger"
            - name: FRONTEND_TRACING_ENDPOINT
              value: 
            - name: FRONTEND_TRACING_COLLECTOR
              value: 

            - name: FRONTEND_DEBUG_PPROF
              value: "false"

            - name: FRONTEND_HTTP_ADDR
              value: 0.0.0.0:9140
            - name: FRONTEND_DEBUG_ADDR
              value: 0.0.0.0:9141

            - name: FRONTEND_PUBLIC_URL
              value: "https://ocis.lab53.net"

            - name: OCIS_LDAP_SERVER_WRITE_ENABLED
              value: "false"
            - name: FRONTEND_READONLY_USER_ATTRIBUTES
              value: ""
            - name: FRONTEND_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: FRONTEND_APP_HANDLER_INSECURE
              value: "true"
            
            - name: FRONTEND_ARCHIVER_INSECURE
              value: "true"

            - name: FRONTEND_OCS_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            - name: FRONTEND_OCS_PUBLIC_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            - name: FRONTEND_SEARCH_MIN_LENGTH
              value: "3"

            - name: FRONTEND_ARCHIVER_MAX_SIZE
              value: "1073741824"

            - name: FRONTEND_ARCHIVER_MAX_NUM_FILES
              value: "10000"

            - name: FRONTEND_FULL_TEXT_SEARCH_ENABLED
              value: "false"

            - name: OCIS_SHOW_USER_EMAIL_IN_RESULTS
              value: "false"

            # cache
            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: FRONTEND_OCS_STAT_CACHE_STORE
              value: noop

            - name: OCIS_EDITION
              value: "Community"

            - name: FRONTEND_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            - name: FRONTEND_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: FRONTEND_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret

            - name: FRONTEND_AUTO_ACCEPT_SHARES
              value: "true"
            - name: FRONTEND_MAX_CONCURRENCY
              value: "100"

            # password policies
            - name: FRONTEND_PASSWORD_POLICY_MIN_CHARACTERS
              value: "0"
            - name: FRONTEND_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS
              value: "0"
            - name: FRONTEND_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS
              value: "0"
            - name: FRONTEND_PASSWORD_POLICY_MIN_DIGITS
              value: "0"
            - name: FRONTEND_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS
              value: "0"
            - name: FRONTEND_PASSWORD_POLICY_BANNED_PASSWORDS_LIST
              value: /etc/ocis/sharing-banned-passwords.txt

            - name: OCIS_ENABLE_OCM
              value: "false"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9140
            - name: metrics-debug
              containerPort: 9141

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: configs
              mountPath: /etc/ocis
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: configs
          configMap:
            name: sharing-banned-passwords-frontend
---
# Source: ocis/templates/gateway/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: gateway
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: gateway
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: gateway
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: gateway
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["gateway", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: GATEWAY_LOG_COLOR
              value: "true"
            - name: GATEWAY_LOG_LEVEL
              value: "debug"
            - name: GATEWAY_LOG_PRETTY
              value: "true"

            - name: GATEWAY_TRACING_ENABLED
              value: "false"
            - name: GATEWAY_TRACING_TYPE
              value: "jaeger"
            - name: GATEWAY_TRACING_ENDPOINT
              value: 
            - name: GATEWAY_TRACING_COLLECTOR
              value: 

            - name: GATEWAY_DEBUG_PPROF
              value: "false"

            - name: GATEWAY_GRPC_ADDR
              value: 0.0.0.0:9142
            - name: GATEWAY_DEBUG_ADDR
              value: 0.0.0.0:9143

            - name: GATEWAY_FRONTEND_PUBLIC_URL
              value: "https://ocis.lab53.net"

            # cache
            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: GATEWAY_STAT_CACHE_STORE
              value: noop
            # provider cache in kubernetes defaults to noop because we might have regularily changing ip addresses
            - name: GATEWAY_PROVIDER_CACHE_STORE
              value: noop
            # create home cache defaults to memory so we don't put too much load on our shared cache
            - name: GATEWAY_CREATE_HOME_CACHE_STORE
              value: memory

            - name: GATEWAY_STORAGE_USERS_MOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "storage-users"
                  key: storage-uuid

            - name: GATEWAY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9142
            - name: metrics-debug
              containerPort: 9143

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ocis/templates/graph/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: graph
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: graph
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: graph
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: graph
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["graph", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"

            - name: GRAPH_LOG_COLOR
              value: "true"
            - name: GRAPH_LOG_LEVEL
              value: "debug"
            - name: GRAPH_LOG_PRETTY
              value: "true"

            - name: GRAPH_TRACING_ENABLED
              value: "false"
            - name: GRAPH_TRACING_TYPE
              value: "jaeger"
            - name: GRAPH_TRACING_ENDPOINT
              value: 
            - name: GRAPH_TRACING_COLLECTOR
              value: 

            - name: GRAPH_DEBUG_PPROF
              value: "false"

            - name: GRAPH_HTTP_ADDR
              value: 0.0.0.0:9120
            - name: GRAPH_DEBUG_ADDR
              value: 0.0.0.0:9124

            - name: GRAPH_SPACES_WEBDAV_BASE
              value: "https://ocis.lab53.net"

            - name: GRAPH_IDENTITY_SEARCH_MIN_LENGTH
              value: "3"

            
            - name: GRAPH_LDAP_URI
              value: "ldap://lldap.lldap:3890"
            - name: GRAPH_LDAP_BIND_DN
              value: "UID=ocis,OU=people,DC=lab53,DC=net"
            - name: GRAPH_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ocis-user-config"
                  key: reva-ldap-bind-password
            - name: GRAPH_LDAP_SERVER_WRITE_ENABLED
              value: "false"
            - name: GRAPH_LDAP_CACERT
              
              value: "" # no cert needed
              
            - name: GRAPH_LDAP_INSECURE
              value: "false"
            - name: GRAPH_LDAP_SERVER_UUID
              value: "false"
            - name: GRAPH_LDAP_SERVER_USE_PASSWORD_MODIFY_EXOP
              value: "false"

            - name: GRAPH_LDAP_REFINT_ENABLED
              value: "false"

            - name: GRAPH_LDAP_USER_BASE_DN
              value: "OU=people,DC=lab53,DC=net"
            - name: GRAPH_LDAP_GROUP_BASE_DN
              value: "OU=groups,DC=lab53,DC=net"
            - name: GRAPH_LDAP_GROUP_CREATE_BASE_DN
              value: "OU=groups,DC=lab53,DC=net"

            - name: GRAPH_LDAP_USER_SCOPE
              value: "sub"
            - name: GRAPH_LDAP_GROUP_SEARCH_SCOPE
              value: "sub"

            - name: GRAPH_USERNAME_MATCH
              value: "default"

            - name: GRAPH_LDAP_USER_FILTER
              value: 
            - name: GRAPH_LDAP_GROUP_FILTER
              value: 

            - name: GRAPH_LDAP_USER_OBJECTCLASS
              value: "person"
            - name: GRAPH_LDAP_GROUP_OBJECTCLASS
              value: "groupOfNames"

            - name: GRAPH_LDAP_USER_UID_ATTRIBUTE
              value: "uuid"
            - name: GRAPH_LDAP_GROUP_ID_ATTRIBUTE
              value: "uuid"

            - name: GRAPH_LDAP_USER_EMAIL_ATTRIBUTE
              value: "mail"

            - name: GRAPH_LDAP_USER_DISPLAYNAME_ATTRIBUTE
              value: "displayname"
            - name: GRAPH_LDAP_USER_NAME_ATTRIBUTE
              value: "user_id"
            - name: GRAPH_LDAP_USER_TYPE_ATTRIBUTE
              value: "ownCloudUserType"
            - name: GRAPH_LDAP_GROUP_NAME_ATTRIBUTE
              value: "display_name"

            - name: GRAPH_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING
              value: "false"
            - name: GRAPH_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING
              value: "false"

            - name: GRAPH_USER_ENABLED_ATTRIBUTE
              value: "ownCloudUserEnabled"
            - name: GRAPH_DISABLE_USER_MECHANISM
              value: "none"
            - name: GRAPH_DISABLED_USERS_GROUP_DN
              value: "cn=DisabledUsersGroup,ou=groups,o=libregraph-idm"

            

            - name: OCIS_SHOW_USER_EMAIL_IN_RESULTS
              value: "false"

            - name: GRAPH_APPLICATION_ID
              valueFrom:
                configMapKeyRef:
                  name: "graph"
                  key: application-id

            - name: GRAPH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_DEFAULT_LANGUAGE
              value: "en"

            - name: GRAPH_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: GRAPH_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: OCIS_ENABLE_OCM
              value: "false"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9120
            - name: metrics-debug
              containerPort: 9124

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
          
        - name: ldap-ca
          
          emptyDir: {}
---
# Source: ocis/templates/groups/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: groups
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: groups
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: groups
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: groups
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["groups", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: GROUPS_LOG_COLOR
              value: "true"
            - name: GROUPS_LOG_LEVEL
              value: "debug"
            - name: GROUPS_LOG_PRETTY
              value: "true"

            - name: GROUPS_TRACING_ENABLED
              value: "false"
            - name: GROUPS_TRACING_TYPE
              value: "jaeger"
            - name: GROUPS_TRACING_ENDPOINT
              value: 
            - name: GROUPS_TRACING_COLLECTOR
              value: 

            - name: GROUPS_DEBUG_PPROF
              value: "false"

            - name: GROUPS_GRPC_ADDR
              value: 0.0.0.0:9160
            - name: GROUPS_DEBUG_ADDR
              value: 0.0.0.0:9161
            - name: GROUPS_LDAP_INSECURE
              value: "false"

            - name: GROUPS_LDAP_USER_BASE_DN
              value: "OU=people,DC=lab53,DC=net"
            - name: GROUPS_LDAP_GROUP_BASE_DN
              value: "OU=groups,DC=lab53,DC=net"

            - name: GROUPS_LDAP_USER_SCOPE
              value: "sub"
            - name: GROUPS_LDAP_GROUP_SCOPE
              value: "sub"

            - name: GROUPS_LDAP_USER_SUBSTRING_FILTER_TYPE
              value: "any"

            - name: GROUPS_LDAP_USER_FILTER
              value: 
            - name: GROUPS_LDAP_GROUP_FILTER
              value: 

            - name: GROUPS_LDAP_USER_OBJECTCLASS
              value: "person"
            - name: GROUPS_LDAP_GROUP_OBJECTCLASS
              value: "groupOfNames"

            - name: GROUPS_LDAP_USER_SCHEMA_ID
              value: "uuid"
            - name: GROUPS_LDAP_GROUP_SCHEMA_ID
              value: "uuid"

            - name: GROUPS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING
              value: "false"
            - name: GROUPS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING
              value: "false"

            - name: GROUPS_LDAP_USER_SCHEMA_MAIL
              value: "mail"
            - name: GROUPS_LDAP_GROUP_SCHEMA_MAIL
              value: "mail"

            - name: GROUPS_LDAP_USER_SCHEMA_DISPLAYNAME
              value: "displayname"
            - name: GROUPS_LDAP_GROUP_SCHEMA_DISPLAYNAME
              value: "display_name"

            - name: GROUPS_LDAP_USER_SCHEMA_USERNAME
              value: "user_id"
            - name: GROUPS_LDAP_GROUP_SCHEMA_GROUPNAME
              value: "display_name"

            - name: GROUPS_LDAP_GROUP_SCHEMA_MEMBER
              value: "member"

            - name: GROUPS_LDAP_URI
            
              value: "ldap://lldap.lldap:3890"
            
            - name: GROUPS_LDAP_CACERT
              
              value: "" # no cert needed
              

            
            - name: GROUPS_LDAP_BIND_DN
              value: "UID=ocis,OU=people,DC=lab53,DC=net"
            

            - name: GROUPS_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ocis-user-config"
                  key: reva-ldap-bind-password

            - name: GROUPS_IDP_URL
            
              value: "https://auth.lab53.net"
            

            - name: GROUPS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9160
            - name: metrics-debug
              containerPort: 9161

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ldap-ca
          
          emptyDir: {}
---
# Source: ocis/templates/nats/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nats
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: nats
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/12
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: nats
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: nats
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["nats", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: NATS_LOG_COLOR
              value: "true"
            - name: NATS_LOG_LEVEL
              value: "debug"
            - name: NATS_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6174
            # - name: NATS_TRACING_ENABLED
            #   value: "false"
            # - name: NATS_TRACING_TYPE
            #   value: "jaeger"
            # - name: NATS_TRACING_ENDPOINT
            #   value: 
            # - name: NATS_TRACING_COLLECTOR
            #   value: 

            - name: NATS_DEBUG_PPROF
              value: "false"

            - name: NATS_NATS_HOST
              value: "0.0.0.0"
            - name: NATS_NATS_PORT
              value: "9233"

            - name: NATS_DEBUG_ADDR
              value: 0.0.0.0:9234
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: nats
              containerPort: 9233
            - name: metrics-debug
              containerPort: 9234

          volumeMounts:
            - name: nats-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        
        - name: nats-data
          emptyDir: {}
---
# Source: ocis/templates/ocdav/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocdav
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: ocdav
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ocdav
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: ocdav
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["ocdav", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            - name: OCDAV_LOG_COLOR
              value: "true"
            - name: OCDAV_LOG_LEVEL
              value: "debug"
            - name: OCDAV_LOG_PRETTY
              value: "true"

            - name: OCDAV_TRACING_ENABLED
              value: "false"
            - name: OCDAV_TRACING_TYPE
              value: "jaeger"
            - name: OCDAV_TRACING_ENDPOINT
              value: 
            - name: OCDAV_TRACING_COLLECTOR
              value: 

            - name: OCDAV_DEBUG_PPROF
              value: "false"

            - name: OCDAV_HTTP_ADDR
              value: 0.0.0.0:8080
            - name: OCDAV_DEBUG_ADDR
              value: 0.0.0.0:9163

            - name: OCDAV_PUBLIC_URL
              value: "https://ocis.lab53.net"

            - name: OCIS_EDITION
              value: "Community"

            - name: OCDAV_INSECURE
              value: "true"

            - name: OCDAV_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCDAV_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9163

          volumeMounts:
            
      
      volumes:
---
# Source: ocis/templates/ocs/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ocs
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: ocs
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: ocs
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: ocs
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["ocs", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"

            - name: OCS_LOG_COLOR
              value: "true"
            - name: OCS_LOG_LEVEL
              value: "debug"
            - name: OCS_LOG_PRETTY
              value: "true"

            - name: OCS_TRACING_ENABLED
              value: "false"
            - name: OCS_TRACING_TYPE
              value: "jaeger"
            - name: OCS_TRACING_ENDPOINT
              value: 
            - name: OCS_TRACING_COLLECTOR
              value: 

            - name: OCS_DEBUG_PPROF
              value: "false"

            - name: OCS_HTTP_ADDR
              value: 0.0.0.0:9110
            - name: OCS_DEBUG_ADDR
              value: 0.0.0.0:9114

            - name: OCS_IDM_ADDRESS
            
              value: "https://auth.lab53.net"
            

            - name: OCS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9110
            - name: metrics-debug
              containerPort: 9114

          volumeMounts:
            
      
      volumes:
---
# Source: ocis/templates/postprocessing/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postprocessing
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: postprocessing
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: postprocessing
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: postprocessing
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["postprocessing", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_PERSISTENT_STORE
              value: "nats-js-kv"
            - name: OCIS_PERSISTENT_STORE_NODES
              value: "nats:9233"

            - name: POSTPROCESSING_LOG_COLOR
              value: "true"
            - name: POSTPROCESSING_LOG_LEVEL
              value: "debug"
            - name: POSTPROCESSING_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6176
            # - name: POSTPROCESSING_TRACING_ENABLED
            #   value: "false"
            # - name: POSTPROCESSING_TRACING_TYPE
            #   value: "jaeger"
            # - name: POSTPROCESSING_TRACING_ENDPOINT
            #   value: 
            # - name: POSTPROCESSING_TRACING_COLLECTOR
            #   value: 

            - name: POSTPROCESSING_DEBUG_PPROF
              value: "false"

            - name: POSTPROCESSING_DEBUG_ADDR
              value: 0.0.0.0:9255

            - name: POSTPROCESSING_WORKERS
              value: "3"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: metrics-debug
              containerPort: 9255

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/proxy/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: proxy
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: proxy
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: proxy
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: c14160dff0b67f47104ff8e1f71b501c079ea25df2b485fdf037e966c72ab515
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: proxy
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["proxy", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233


            - name: PROXY_LOG_COLOR
              value: "true"
            - name: PROXY_LOG_LEVEL
              value: "debug"
            - name: PROXY_LOG_PRETTY
              value: "true"

            - name: PROXY_TRACING_ENABLED
              value: "false"
            - name: PROXY_TRACING_TYPE
              value: "jaeger"
            - name: PROXY_TRACING_ENDPOINT
              value: 
            - name: PROXY_TRACING_COLLECTOR
              value: 

            - name: PROXY_DEBUG_PPROF
              value: "false"

            - name: PROXY_HTTP_ADDR
              value: 0.0.0.0:9200
            - name: PROXY_DEBUG_ADDR
              value: 0.0.0.0:9205

            - name: PROXY_OIDC_ISSUER
              value: "https://auth.lab53.net"
            - name: PROXY_OIDC_REWRITE_WELLKNOWN
              value: "true"

            - name: PROXY_USER_OIDC_CLAIM
              value: "email"
            - name: PROXY_USER_CS3_CLAIM
              value: "mail"

            - name: PROXY_OIDC_ACCESS_TOKEN_VERIFY_METHOD
              value: "none"

            - name: PROXY_OIDC_SKIP_USER_INFO
              value: "false"

            - name: PROXY_TLS
              value: "false"

            - name: PROXY_OIDC_INSECURE
              value: "true"

            - name: PROXY_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: PROXY_MACHINE_AUTH_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "machine-auth-api-key"
                  key: machine-auth-api-key

            - name: PROXY_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: PROXY_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: PROXY_CSP_CONFIG_FILE_LOCATION
              value: /etc/ocis/csp.yaml

            - name: PROXY_AUTOPROVISION_ACCOUNTS
              value: "false"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9200
            - name: metrics-debug
              containerPort: 9205

          volumeMounts:
            - name: configs
              mountPath: /etc/ocis
            
      
      volumes:
        - name: configs
          configMap:
            name: proxy-config
---
# Source: ocis/templates/search/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: search
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: search
  replicas: 1 #TODO: https://github.com/owncloud/ocis-charts/issues/15
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: search
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: search
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["search", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: SEARCH_LOG_COLOR
              value: "true"
            - name: SEARCH_LOG_LEVEL
              value: "debug"
            - name: SEARCH_LOG_PRETTY
              value: "true"

            - name: SEARCH_TRACING_ENABLED
              value: "false"
            - name: SEARCH_TRACING_TYPE
              value: "jaeger"
            - name: SEARCH_TRACING_ENDPOINT
              value: 
            - name: SEARCH_TRACING_COLLECTOR
              value: 

            - name: SEARCH_DEBUG_PPROF
              value: "false"

            - name: SEARCH_GRPC_ADDR
              value: 0.0.0.0:9220
            - name: SEARCH_DEBUG_ADDR
              value: 0.0.0.0:9224
            - name: SEARCH_EXTRACTOR_TYPE
              value: basic

            - name: SEARCH_EXTRACTOR_CS3SOURCE_INSECURE
              value: "true"

            - name: SEARCH_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: SEARCH_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: SEARCH_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: OCIS_ASYNC_UPLOADS
              value: "true"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9220
            - name: metrics-debug
              containerPort: 9224

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: search-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
          
        
        - name: search-data
          emptyDir: {}
---
# Source: ocis/templates/settings/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: settings
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: settings
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: settings
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 01ba4719c80b6fe911b091a7c05124b64eeece964e09c058ef8f9805daca546b
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: settings
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["settings", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"

            - name: OCIS_DEFAULT_LANGUAGE
              value: "en"

            - name: SETTINGS_LOG_COLOR
              value: "true"
            - name: SETTINGS_LOG_LEVEL
              value: "debug"
            - name: SETTINGS_LOG_PRETTY
              value: "true"

            - name: SETTINGS_TRACING_ENABLED
              value: "false"
            - name: SETTINGS_TRACING_TYPE
              value: "jaeger"
            - name: SETTINGS_TRACING_ENDPOINT
              value: 
            - name: SETTINGS_TRACING_COLLECTOR
              value: 

            - name: SETTINGS_DEBUG_PPROF
              value: "false"

            - name: SETTINGS_HTTP_ADDR
              value: 0.0.0.0:9190
            - name: SETTINGS_GRPC_ADDR
              value: 0.0.0.0:9191
            - name: SETTINGS_DEBUG_ADDR
              value: 0.0.0.0:9194
            - name: SETTINGS_ADMIN_USER_ID
              value: "8a3bc66d-b738-3cdc-9108-f9b0dd90ff1d"
            - name: SETTINGS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: SETTINGS_SERVICE_ACCOUNT_IDS
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id

            - name: OCIS_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: api-key
            - name: OCIS_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: user-id
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9190
            - name: grpc
              containerPort: 9191
            - name: metrics-debug
              containerPort: 9194

          volumeMounts:
            
      

      volumes:
---
# Source: ocis/templates/sharing/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sharing
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: sharing
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sharing
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: sharing
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["sharing", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: SHARING_LOG_COLOR
              value: "true"
            - name: SHARING_LOG_LEVEL
              value: "debug"
            - name: SHARING_LOG_PRETTY
              value: "true"

            - name: SHARING_TRACING_ENABLED
              value: "false"
            - name: SHARING_TRACING_TYPE
              value: "jaeger"
            - name: SHARING_TRACING_ENDPOINT
              value: 
            - name: SHARING_TRACING_COLLECTOR
              value: 

            - name: SHARING_DEBUG_PPROF
              value: "false"

            - name: SHARING_GRPC_ADDR
              value: 0.0.0.0:9150
            - name: SHARING_DEBUG_ADDR
              value: 0.0.0.0:9151

            - name: SHARING_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: SHARING_PUBLIC_WRITEABLE_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            - name: SHARING_PUBLIC_SHARE_MUST_HAVE_PASSWORD
              value: "false"

            # password policies
            - name: SHARING_PASSWORD_POLICY_MIN_CHARACTERS
              value: "0"
            - name: SHARING_PASSWORD_POLICY_MIN_LOWERCASE_CHARACTERS
              value: "0"
            - name: SHARING_PASSWORD_POLICY_MIN_UPPERCASE_CHARACTERS
              value: "0"
            - name: SHARING_PASSWORD_POLICY_MIN_DIGITS
              value: "0"
            - name: SHARING_PASSWORD_POLICY_MIN_SPECIAL_CHARACTERS
              value: "0"
            - name: SHARING_PASSWORD_POLICY_BANNED_PASSWORDS_LIST
              value: /etc/ocis/sharing-banned-passwords.txt

            # user sharing
            - name: SHARING_USER_DRIVER
              value: jsoncs3
            - name: SHARING_USER_JSONCS3_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: api-key
            - name: SHARING_USER_JSONCS3_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: user-id

            # public sharing
            - name: SHARING_PUBLIC_DRIVER
              value: jsoncs3
            - name: SHARING_PUBLIC_JSONCS3_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: api-key
            - name: SHARING_PUBLIC_JSONCS3_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: user-id

            - name: SHARING_USER_JSONCS3_MAX_CONCURRENCY
              value: "20"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9150
            - name: metrics-debug
              containerPort: 9151

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: configs
              mountPath: /etc/ocis
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
          
        - name: configs
          configMap:
            name: sharing-banned-passwords-sharing
---
# Source: ocis/templates/sse/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sse
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: sse
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sse
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: sse
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["sse", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233

            - name: SSE_LOG_COLOR
              value: "true"
            - name: SSE_LOG_LEVEL
              value: "debug"
            - name: SSE_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6176
            - name: SSE_TRACING_ENABLED
              value: "false"
            - name: SSE_TRACING_TYPE
              value: "jaeger"
            - name: SSE_TRACING_ENDPOINT
              value: 
            - name: SSE_TRACING_COLLECTOR
              value: 

            - name: SSE_DEBUG_PPROF
              value: "false"

            - name: SSE_DEBUG_ADDR
              value: 0.0.0.0:9135

            - name: SSE_HTTP_ADDR
              value: 0.0.0.0:9939

            - name: SSE_KEEPALIVE_INTERVAL
              value: "30s"

            - name: SSE_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9939
            - name: metrics-debug
              containerPort: 9135

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/storagepubliclink/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storagepubliclink
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: storagepubliclink
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storagepubliclink
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: storagepubliclink
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-publiclink", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: STORAGE_PUBLICLINK_LOG_COLOR
              value: "true"
            - name: STORAGE_PUBLICLINK_LOG_LEVEL
              value: "debug"
            - name: STORAGE_PUBLICLINK_LOG_PRETTY
              value: "true"

            - name: STORAGE_PUBLICLINK_TRACING_ENABLED
              value: "false"
            - name: STORAGE_PUBLICLINK_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_PUBLICLINK_TRACING_ENDPOINT
              value: 
            - name: STORAGE_PUBLICLINK_TRACING_COLLECTOR
              value: 

            - name: STORAGE_PUBLICLINK_DEBUG_PPROF
              value: "false"

            - name: STORAGE_PUBLICLINK_GRPC_ADDR
              value: 0.0.0.0:9178
            - name: STORAGE_PUBLICLINK_DEBUG_ADDR
              value: 0.0.0.0:9179

            - name: STORAGE_PUBLICLINK_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9178
            - name: metrics-debug
              containerPort: 9179

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ocis/templates/storageshares/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storageshares
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: storageshares
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storageshares
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: storageshares
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-shares", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: STORAGE_SHARES_LOG_COLOR
              value: "true"
            - name: STORAGE_SHARES_LOG_LEVEL
              value: "debug"
            - name: STORAGE_SHARES_LOG_PRETTY
              value: "true"

            - name: STORAGE_SHARES_TRACING_ENABLED
              value: "false"
            - name: STORAGE_SHARES_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_SHARES_TRACING_ENDPOINT
              value: 
            - name: STORAGE_SHARES_TRACING_COLLECTOR
              value: 

            - name: STORAGE_SHARES_DEBUG_PPROF
              value: "false"

            - name: STORAGE_SHARES_GRPC_ADDR
              value: 0.0.0.0:9154
            - name: STORAGE_SHARES_DEBUG_ADDR
              value: 0.0.0.0:9156

            - name: STORAGE_SHARES_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9154
            - name: metrics-debug
              containerPort: 9156

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
---
# Source: ocis/templates/storagesystem/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storagesystem
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: storagesystem
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storagesystem
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: storagesystem
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-system", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"

            # logging
            - name: STORAGE_SYSTEM_LOG_COLOR
              value: "true"
            - name: STORAGE_SYSTEM_LOG_LEVEL
              value: "debug"
            - name: STORAGE_SYSTEM_LOG_PRETTY
              value: "true"

            - name: STORAGE_SYSTEM_TRACING_ENABLED
              value: "false"
            - name: STORAGE_SYSTEM_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_SYSTEM_TRACING_ENDPOINT
              value: 
            - name: STORAGE_SYSTEM_TRACING_COLLECTOR
              value: 

            - name: STORAGE_SYSTEM_DEBUG_PPROF
              value: "false"

            # bind configuration
            - name: STORAGE_SYSTEM_GRPC_ADDR
              value: 0.0.0.0:9215
            - name: STORAGE_SYSTEM_DEBUG_ADDR
              value: 0.0.0.0:9217

            # external availability data gateway
            - name: STORAGE_SYSTEM_HTTP_ADDR
              value: 0.0.0.0:9216
            - name: STORAGE_SYSTEM_DATA_SERVER_URL
              value: http://storagesystem:9216/data

            - name: STORAGE_SYSTEM_DRIVER
              value: ocis

            - name: STORAGE_SYSTEM_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "storage-system-jwt-secret"
                  key: storage-system-jwt-secret

            - name: OCIS_SYSTEM_USER_API_KEY
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: api-key

            - name: OCIS_SYSTEM_USER_ID
              valueFrom:
                secretKeyRef:
                  name: "storage-system-secret"
                  key: user-id
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9215
            - name: http
              containerPort: 9216
            - name: metrics-debug
              containerPort: 9217

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: storagesystem-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        
        - name: storagesystem-data
          emptyDir: {}
---
# Source: ocis/templates/storageusers/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: storageusers
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: storageusers
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: storageusers
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: storageusers
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["storage-users", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_CACHE_STORE
              value: "nats-js-kv"
            - name: OCIS_CACHE_STORE_NODES
              value: "nats:9233"
            - name: OCIS_CACHE_DISABLE_PERSISTENCE
              value: "true"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            # set the gateway for the CLI tools
            - name: STORAGE_USERS_GATEWAY_GRPC_ADDR
              value: gateway:9142
            # logging
            - name: STORAGE_USERS_LOG_COLOR
              value: "true"
            - name: STORAGE_USERS_LOG_LEVEL
              value: "debug"
            - name: STORAGE_USERS_LOG_PRETTY
              value: "true"

            - name: STORAGE_USERS_TRACING_ENABLED
              value: "false"
            - name: STORAGE_USERS_TRACING_TYPE
              value: "jaeger"
            - name: STORAGE_USERS_TRACING_ENDPOINT
              value: 
            - name: STORAGE_USERS_TRACING_COLLECTOR
              value: 

            - name: STORAGE_USERS_DEBUG_PPROF
              value: "false"

            # bind config
            - name: STORAGE_USERS_GRPC_ADDR
              value: 0.0.0.0:9157
            - name: STORAGE_USERS_DEBUG_ADDR
              value: 0.0.0.0:9159

            # external availability data gateway
            - name: STORAGE_USERS_HTTP_ADDR
              value: 0.0.0.0:9158
            - name: STORAGE_USERS_DATA_SERVER_URL
              value: "http://storageusers:9158/data"

            # oCIS storage driver (decomposed filesystem)
            - name: STORAGE_USERS_DRIVER
              value: ocis
            - name: STORAGE_USERS_OCIS_MAX_CONCURRENCY
              value: "100"

            # S3ng storage driver (decomposed filesystem)

            # Duration in seconds after which uploads will expire.
            - name: STORAGE_USERS_UPLOAD_EXPIRATION
              value: "86400"

            # Settings for how old trash bin items should be deleted
            - name: STORAGE_USERS_PURGE_TRASH_BIN_PERSONAL_DELETE_BEFORE
              value: "30d"
            - name: STORAGE_USERS_PURGE_TRASH_BIN_PROJECT_DELETE_BEFORE
              value: "30d"

            - name: STORAGE_USERS_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: STORAGE_USERS_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            # the stat cache is disabled for now for performance reasons, see https://github.com/owncloud/ocis-charts/issues/214
            - name: STORAGE_USERS_STAT_CACHE_STORE
              value: noop

            - name: STORAGE_USERS_MOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "storage-users"
                  key: storage-uuid

            - name: STORAGE_USERS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: OCIS_TRANSFER_SECRET
              valueFrom:
                secretKeyRef:
                  name: "transfer-secret"
                  key: transfer-secret

            - name: OCIS_ASYNC_UPLOADS
              value: "true"
            - name: STORAGE_USERS_EVENTS_NUM_CONSUMERS
              value: "10"

            - name: STORAGE_USERS_DATA_GATEWAY_URL
              value: "http://frontend:9140/data/"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9157
            - name: http
              containerPort: 9158
            - name: metrics-debug
              containerPort: 9159

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            - name: storageusers-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: messaging-system-ca
          
          emptyDir: {}
          
        
        - name: storageusers-data
          emptyDir: {}
---
# Source: ocis/templates/thumbnails/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: thumbnails
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: thumbnails
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: thumbnails
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: thumbnails
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["thumbnails", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            - name: THUMBNAILS_LOG_COLOR
              value: "true"
            - name: THUMBNAILS_LOG_LEVEL
              value: "debug"
            - name: THUMBNAILS_LOG_PRETTY
              value: "true"

            - name: THUMBNAILS_TRACING_ENABLED
              value: "false"
            - name: THUMBNAILS_TRACING_TYPE
              value: "jaeger"
            - name: THUMBNAILS_TRACING_ENDPOINT
              value: 
            - name: THUMBNAILS_TRACING_COLLECTOR
              value: 

            - name: THUMBNAILS_DEBUG_PPROF
              value: "false"

            - name: THUMBNAILS_GRPC_ADDR
              value: 0.0.0.0:9185
            - name: THUMBNAILS_HTTP_ADDR
              value: 0.0.0.0:9186
            - name: THUMBNAILS_DEBUG_ADDR
              value: 0.0.0.0:9189

            - name: THUMBNAILS_DATA_ENDPOINT
              value: http://thumbnails:9186/thumbnails/data

            - name: THUMBNAILS_MAX_CONCURRENT_REQUESTS
              value: "0"
            - name: THUMBNAILS_MAX_INPUT_IMAGE_FILE_SIZE
              value: "50MB"
            - name: THUMBNAILS_MAX_INPUT_WIDTH
              value: "7680"
            - name: THUMBNAILS_MAX_INPUT_HEIGHT
              value: "7680"

            - name: THUMBNAILS_WEBDAVSOURCE_INSECURE
              value: "true"

            - name: THUMBNAILS_CS3SOURCE_INSECURE
              value: "true"

            - name: THUMBNAILS_TRANSFER_TOKEN
              valueFrom:
                secretKeyRef:
                  name: "thumbnails-transfer-secret"
                  key: thumbnails-transfer-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9185
            - name: http
              containerPort: 9186
            - name: metrics-debug
              containerPort: 9189

          volumeMounts:
            - name: thumbnails-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        
        - name: thumbnails-data
          emptyDir: {}
---
# Source: ocis/templates/userlog/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: userlog
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: userlog
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: userlog
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: userlog
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["userlog", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"
            
            - name: OCIS_EVENTS_ENDPOINT
              value: nats:9233
            - name: OCIS_PERSISTENT_STORE
              value: "nats-js-kv"
            - name: OCIS_PERSISTENT_STORE_NODES
              value: "nats:9233"

            - name: OCIS_DEFAULT_LANGUAGE
              value: "en"

            - name: USERLOG_LOG_COLOR
              value: "true"
            - name: USERLOG_LOG_LEVEL
              value: "debug"
            - name: USERLOG_LOG_PRETTY
              value: "true"

            # Tracing not yet implemented: https://github.com/owncloud/ocis/issues/6177
            # - name: USERLOG_TRACING_ENABLED
            #   value: "false"
            # - name: USERLOG_TRACING_TYPE
            #   value: "jaeger"
            # - name: USERLOG_TRACING_ENDPOINT
            #   value: 
            # - name: USERLOG_TRACING_COLLECTOR
            #   value: 

            - name: USERLOG_DEBUG_PPROF
              value: "false"

            - name: USERLOG_HTTP_ADDR
              value: 0.0.0.0:8080

            - name: USERLOG_DEBUG_ADDR
              value: 0.0.0.0:9210

            - name: USERLOG_SERVICE_ACCOUNT_ID
              valueFrom:
                configMapKeyRef:
                  name: "auth-service"
                  key: service-account-id
            - name: USERLOG_SERVICE_ACCOUNT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "service-account-secret"
                  key: service-account-secret

            - name: USERLOG_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret

            - name: USERLOG_MAX_CONCURRENCY
              value: "1"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 8080
            - name: metrics-debug
              containerPort: 9210

          volumeMounts:
            - name: messaging-system-ca
              mountPath: /etc/ocis/messaging-system-ca
              readOnly: true
            
      
      volumes:
        - name: messaging-system-ca
          
          emptyDir: {}
---
# Source: ocis/templates/users/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: users
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: users
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: users
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: users
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["users", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"

            - name: USERS_LOG_COLOR
              value: "true"
            - name: USERS_LOG_LEVEL
              value: "debug"
            - name: USERS_LOG_PRETTY
              value: "true"

            - name: USERS_TRACING_ENABLED
              value: "false"
            - name: USERS_TRACING_TYPE
              value: "jaeger"
            - name: USERS_TRACING_ENDPOINT
              value: 
            - name: USERS_TRACING_COLLECTOR
              value: 

            - name: USERS_DEBUG_PPROF
              value: "false"

            - name: USERS_GRPC_ADDR
              value: 0.0.0.0:9144
            - name: USERS_DEBUG_ADDR
              value: 0.0.0.0:9145
            - name: USERS_LDAP_INSECURE
              value: "false"

            - name: USERS_LDAP_USER_BASE_DN
              value: "OU=people,DC=lab53,DC=net"
            - name: USERS_LDAP_GROUP_BASE_DN
              value: "OU=groups,DC=lab53,DC=net"

            - name: USERS_LDAP_USER_SCOPE
              value: "sub"
            - name: USERS_LDAP_GROUP_SCOPE
              value: "sub"

            - name: USERS_LDAP_USER_SUBSTRING_FILTER_TYPE
              value: "any"

            - name: USERS_LDAP_USER_FILTER
              value: 
            - name: USERS_LDAP_GROUP_FILTER
              value: 

            - name: USERS_LDAP_USER_OBJECTCLASS
              value: "person"
            - name: USERS_LDAP_GROUP_OBJECTCLASS
              value: "groupOfNames"

            - name: USERS_LDAP_USER_SCHEMA_ID
              value: "uuid"
            - name: USERS_LDAP_GROUP_SCHEMA_ID
              value: "uuid"

            - name: USERS_LDAP_USER_SCHEMA_ID_IS_OCTETSTRING
              value: "false"
            - name: USERS_LDAP_GROUP_SCHEMA_ID_IS_OCTETSTRING
              value: "false"

            - name: USERS_LDAP_USER_SCHEMA_MAIL
              value: "mail"
            - name: USERS_LDAP_GROUP_SCHEMA_MAIL
              value: "mail"

            - name: USERS_LDAP_USER_SCHEMA_DISPLAYNAME
              value: "displayname"
            - name: USERS_LDAP_GROUP_SCHEMA_DISPLAYNAME
              value: "display_name"

            - name: USERS_LDAP_USER_SCHEMA_USERNAME
              value: "user_id"
            - name: USERS_LDAP_USER_TYPE_ATTRIBUTE
              value: "ownCloudUserType"
            - name: USERS_LDAP_GROUP_SCHEMA_GROUPNAME
              value: "display_name"

            - name: USERS_LDAP_GROUP_SCHEMA_MEMBER
              value: "member"

            - name: USERS_LDAP_USER_ENABLED_ATTRIBUTE
              value: "ownCloudUserEnabled"
            - name: USERS_LDAP_DISABLE_USER_MECHANISM
              value: "none"
            - name: USERS_LDAP_DISABLED_USERS_GROUP_DN
              value: "cn=DisabledUsersGroup,ou=groups,o=libregraph-idm"

            - name: USERS_LDAP_URI
            
              value: "ldap://lldap.lldap:3890"
            

            - name: USERS_LDAP_CACERT
              
              value: "" # no cert needed
              

            
            - name: USERS_LDAP_BIND_DN
              value: "UID=ocis,OU=people,DC=lab53,DC=net"
            

            - name: USERS_LDAP_BIND_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: "ocis-user-config"
                  key: reva-ldap-bind-password
            - name: USERS_IDP_URL
            
              value: "https://auth.lab53.net"
            

            - name: USERS_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: grpc
              containerPort: 9144
            - name: metrics-debug
              containerPort: 9145

          volumeMounts:
            - name: tmp-volume
              mountPath: /tmp
            - name: ldap-ca
              mountPath: /etc/ocis/ldap-ca
              readOnly: true
            
      
      volumes:
        - name: tmp-volume
          emptyDir: {}
        - name: ldap-ca
          
          emptyDir: {}
---
# Source: ocis/templates/web/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: web
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: web
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
      annotations:
        checksum/config: 840451eebf967fba46c80a4122683611917aa8714b05e0c5cddc95238908ba10
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: web
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["web", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            - name: WEB_LOG_COLOR
              value: "true"
            - name: WEB_LOG_LEVEL
              value: "debug"
            - name: WEB_LOG_PRETTY
              value: "true"

            - name: WEB_TRACING_ENABLED
              value: "false"
            - name: WEB_TRACING_TYPE
              value: "jaeger"
            - name: WEB_TRACING_ENDPOINT
              value: 
            - name: WEB_TRACING_COLLECTOR
              value: 

            - name: WEB_DEBUG_PPROF
              value: "false"

            - name: WEB_HTTP_ADDR
              value: 0.0.0.0:9100
            - name: WEB_DEBUG_ADDR
              value: 0.0.0.0:9104

            - name: WEB_OIDC_AUTHORITY
              value: "https://auth.lab53.net"
            - name: WEB_OIDC_CLIENT_ID
              value: "c6206bc285517cb78fd8c827e99205a00747b3be281348ec"
            - name: WEB_OIDC_SCOPE
              value: "openid profile email"

            - name: WEB_UI_THEME_SERVER
              value: https://ocis.lab53.net
            - name: WEB_UI_THEME_PATH
              value: "/themes/owncloud/theme.json"

            - name: WEB_UI_CONFIG_SERVER
              value: "https://ocis.lab53.net"

            - name: WEB_OPTION_CONTEXTHELPERS_READ_MORE
              value: "true"
            - name: WEB_OPTION_LOGIN_URL
              value: "https://ocis.lab53.net"

            - name: WEB_OPTION_DISABLE_FEEDBACK_LINK
              value: "true"

            - name: WEB_OPTION_TOKEN_STORAGE_LOCAL
              value: "true"

            - name: WEB_JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: "jwt-secret"
                  key: jwt-secret
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 9100
            - name: metrics-debug
              containerPort: 9104

          volumeMounts:
            - name: configs
              mountPath: /etc/ocis
            - name: apps
              mountPath: /var/lib/ocis/web/assets/apps
            - name: web-data
              mountPath: /var/lib/ocis
            
      
      volumes:
        - name: configs
          configMap:
            name: web-config
        - name: apps
          emptyDir: {}
        
        - name: web-data
          emptyDir: {}
---
# Source: ocis/templates/webdav/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webdav
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: webdav
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webdav
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: webdav
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["webdav", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            - name: WEBDAV_LOG_COLOR
              value: "true"
            - name: WEBDAV_LOG_LEVEL
              value: "debug"
            - name: WEBDAV_LOG_PRETTY
              value: "true"

            - name: WEBDAV_TRACING_ENABLED
              value: "false"
            - name: WEBDAV_TRACING_TYPE
              value: "jaeger"
            - name: WEBDAV_TRACING_ENDPOINT
              value: 

            - name: WEBDAV_TRACING_COLLECTOR
              value: 

            - name: WEBDAV_DEBUG_PPROF
              value: "false"

            - name: WEBDAV_HTTP_ADDR
              value: 0.0.0.0:9115
            - name: WEBDAV_DEBUG_ADDR
              value: 0.0.0.0:9119

            - name: OCIS_PUBLIC_URL
              value: "https://ocis.lab53.net"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}
          ports:
            - name: http
              containerPort: 9115
            - name: metrics-debug
              containerPort: 9119

          volumeMounts:
            
      
      volumes:
---
# Source: ocis/templates/webfinger/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: webfinger
  namespace: ocis
  labels:
    helm.sh/chart: ocis-0.7.0
    app.kubernetes.io/name: ocis
    app.kubernetes.io/instance: ocis
    app.kubernetes.io/version: "7.1.2"
    app.kubernetes.io/managed-by: Helm
spec:
  selector:
    matchLabels:
      app: webfinger
  replicas: 1
  
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 25%
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: webfinger
        helm.sh/chart: ocis-0.7.0
        app.kubernetes.io/name: ocis
        app.kubernetes.io/instance: ocis
        app.kubernetes.io/version: "7.1.2"
        app.kubernetes.io/managed-by: Helm
    spec:
      
      securityContext:
          fsGroup: 1000
          fsGroupChangePolicy: OnRootMismatch
      
      
      nodeSelector: 
        {}
      containers:
        - name: webfinger
          image: "owncloud/ocis:7.1.2"
          imagePullPolicy: IfNotPresent
          command: ["ocis"]
          args: ["webfinger", "server"]
          securityContext:
            runAsNonRoot: true
            runAsUser: 1000
            runAsGroup: 1000
            readOnlyRootFilesystem: true
          env:
            - name: MICRO_REGISTRY
              value: "nats-js-kv"
            - name: MICRO_REGISTRY_ADDRESS
              value: "nats:9233"
            - name: OCIS_CORS_ALLOW_ORIGINS
              value: "https://ocis.lab53.net"

            - name: WEBFINGER_LOG_COLOR
              value: "true"
            - name: WEBFINGER_LOG_LEVEL
              value: "debug"
            - name: WEBFINGER_LOG_PRETTY
              value: "true"

            - name: WEBFINGER_TRACING_ENABLED
              value: "false"
            - name: WEBFINGER_TRACING_TYPE
              value: "jaeger"
            - name: WEBFINGER_TRACING_ENDPOINT
              value: 

            - name: WEBFINGER_TRACING_COLLECTOR
              value: 

            - name: WEBFINGER_DEBUG_PPROF
              value: "false"

            - name: WEBFINGER_HTTP_ADDR
              value: 0.0.0.0:8080
            - name: WEBFINGER_DEBUG_ADDR
              value: 0.0.0.0:8081

            - name: WEBFINGER_OIDC_ISSUER
              value: "https://auth.lab53.net"
            - name: WEBFINGER_OWNCLOUD_SERVER_INSTANCE_URL
              value: "https://ocis.lab53.net"
            - name: WEBFINGER_INSECURE
              value: "true"
            
          livenessProbe:
            httpGet:
              path: /healthz
              port: metrics-debug
            timeoutSeconds: 10
            initialDelaySeconds: 60
            periodSeconds: 20
            failureThreshold: 3

          resources: 
            {}

          ports:
            - name: http
              containerPort: 8080
            - name: metrics-debug
              containerPort: 8081

          volumeMounts:
            
      
      volumes:
